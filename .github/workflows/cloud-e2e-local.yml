name: AV-SAFE cloud-e2e-local

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install -r requirements.txt || true
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install fastapi mangum pydantic python-jose[cryptography] requests uvicorn jsonschema

      - name: Run local API
        env:
          AUTH_MODE: dev
          DEV_TOKEN: devtoken
          LOCAL_MODE: "1"
        run: |
          nohup python -m uvicorn cloud.api_app:app --host 127.0.0.1 --port 8000 >/tmp/api.log 2>&1 &
          sleep 2
          echo "API started"

      - name: Generate minutes (sim) & upload locally
        env:
          AUTH_MODE: dev
          DEV_TOKEN: devtoken
          LOCAL_MODE: "1"
        run: |
          python -m avsafe_descriptors.cli.sim --minutes 2 --outfile minutes.jsonl
          gzip -c minutes.jsonl > minutes.jsonl.gz
          python tools/client_uploader.py --base http://127.0.0.1:8000 --token devtoken \
            --label "CI Case" --device DEV-CI --file minutes.jsonl.gz
          python -m cloud.local_runner --once

      - name: Assert report exists & is non-empty
        run: |
          ls -R local_data | sed -n '1,200p'
          REPORT=$(grep -R "report.html" -n local_data | head -n1 | awk -F: '{print $1}')
          test -n "$REPORT"
          test -s "$REPORT"
          echo "Found report: $REPORT"

      - name: Validate minutes against schema
        run: |
          python -m avsafe_descriptors.cli.validate_minutes \
            --in local_data/avsafe-verified/verified/*/*/minutes.jsonl \
            --schema avsafe_descriptors/hf_avc/schemas/avsafe-minute-summary.schema.json
