from __future__ import annotations
import io, base64, json
from typing import List, Dict
import matplotlib.pyplot as plt

def _enc(fig) -> str:
    buf = io.BytesIO(); fig.savefig(buf, format="png", bbox_inches="tight"); plt.close(fig)
    return base64.b64encode(buf.getvalue()).decode("ascii")

def html_from(minutes: List[dict], results: List[dict], integrity_summary: dict | None = None) -> str:
    laeqs = [m.get("laeq_db") for m in minutes if m.get("laeq_db") is not None]
    pmods = [m.get("tlm_percent_mod") for m in minutes if m.get("tlm_percent_mod") is not None]

    ts0 = minutes[0]["timestamp_utc"] if minutes else "N/A"
    ts1 = minutes[-1]["timestamp_utc"] if minutes else "N/A"

    la_plot = None
    if laeqs:
        fig = plt.figure(figsize=(8,3)); plt.plot(range(len(laeqs)), laeqs)
        plt.xlabel("Minute index"); plt.ylabel("LAeq dB(A)"); plt.title("LAeq over time")
        la_plot = _enc(fig)

    pm_hist = None
    if pmods:
        fig = plt.figure(figsize=(4,3)); plt.hist(pmods, bins=20)
        plt.xlabel("Percent modulation (%)"); plt.ylabel("Count of minutes"); plt.title("Flicker modulation distribution")
        pm_hist = _enc(fig)

    rows = "".join([f"<tr><td>{r.get('rule_id')}</td><td>{r.get('severity')}</td><td>{r.get('message')}</td><td><pre>{json.dumps(r.get('details',{}))}</pre></td></tr>" for r in results])

    integrity_block = ""
    if integrity_summary:
        items = "".join([f"<li><b>{k}</b>: {v}</li>" for k,v in integrity_summary.items()])
        integrity_block = "<ul>"+items+"</ul>"

    html = f"""
<!DOCTYPE html><html><head><meta charset="utf-8"><title>AV-SAFE Report</title>
<style>
body {{ font-family: sans-serif; line-height: 1.35; }}
table {{ border-collapse: collapse; width: 100%; }}
th, td {{ border: 1px solid #ddd; padding: 6px; font-size: 14px; }}
th {{ background: #f0f0f0; }}
h1, h2 {{ margin-bottom: 0.3rem; }}
.small {{ color: #666; font-size: 12px; }}
img {{ max-width: 100%; height: auto; }}
</style></head><body>
<h1>AV-SAFE Forensic Report</h1>
<div class="small">Window: {ts0} â†’ {ts1}</div>

<h2>Integrity</h2>
<p>Summarizes privacy-preserving descriptors (no raw audio/light). Each minute can be hash-chained and optionally signed by the device.</p>
{integrity_block}

<h2>Key results</h2>
<table><tr><th>Rule</th><th>Severity</th><th>Message</th><th>Details</th></tr>{rows}</table>

<h2>Visuals</h2>
{('<h3>LAeq timeseries</h3><img src="data:image/png;base64,' + la_plot + '">') if la_plot else '<p>No LAeq data.</p>'}
{('<h3>Flicker percent-mod histogram</h3><img src="data:image/png;base64,' + pm_hist + '">') if pm_hist else '<p>No flicker data.</p>'}

<footer class="small"><p>Generated by AV-SAFE (MVP). Thresholds must be aligned to jurisdictional standards.</p></footer>
</body></html>
"""
    return html
